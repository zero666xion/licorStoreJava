
package Ventanas;

import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

public class Ventas extends javax.swing.JFrame {

    static Connection conn=null;
    static Statement s=null;
    static ResultSet rs=null;
    int fila=0;
    public static String pruebba="";
    String cap="ID_PRODUCTO";
    DefaultTableModel modelo = new DefaultTableModel();
    String fecha="",total="",personal="",cliente="",idventa1="";
    
    
    
void refrescar() throws SQLException{

    conn=Conexion.Enlace(conn);
    s=conn.createStatement();
    rs =s.executeQuery("SELECT VENTA.ID_VENTA,\n" +
    "       VENTA.FECHA,\n" +
    "       VENTA.TOTAL,\n" +
    "       PERSONAL.NOMBRE,\n" +
    "       VENTA.ID_CLIENTE, \n" +
            "STATUS.STATUS \n"+
    "FROM VENTA \n" +
    "INNER JOIN PERSONAL ON VENTA.ID_PERSONAL = PERSONAL.ID_PERSONAL \n" +
    "INNER JOIN STATUS ON DETALLE_COMPRA.ID_STATUS = STATUS.ID_STATUS \n "+ 
    "ORDER BY ID_VENTA ASC");
    datosventas.setModel(DbUtils.resultSetToTableModel(rs));
    
    }
    public Ventas() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Imagenes/icono.jpg")).getImage());
        setLocationRelativeTo(null);
        ((JPanel) getContentPane()).setOpaque(false);
        IDVENTA.disable();
        
        this.datosventas.setModel(modelo);
        try {
            conn=Conexion.Enlace(conn);//ejecuta la conexion
            rs=Conexion.tablaVentas(rs);//ejecuta la consulta
            ResultSetMetaData rsMd = rs.getMetaData();//volcamos los resultados de rs a rsmetadata            
            int cantidadColumnas = rsMd.getColumnCount();//La cantidad de columnas que tiene la consulta            
            
            for (int i = 1; i <= cantidadColumnas; i++) {//Establecer como cabezeras el nombre de las columnas
                modelo.addColumn(rsMd.getColumnLabel(i));
            }
            
            while (rs.next()) {//Creando las filas para el JTable
                Object[] fila = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    fila[i]=rs.getObject(i+1);
                }
                modelo.addRow(fila);
            }
            
            rs.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
        datosventas.addMouseListener(new MouseAdapter() {
        public void mousePressed(MouseEvent Mouse_evt) {
            JTable table =(JTable) Mouse_evt.getSource();
            Point point = Mouse_evt.getPoint();
            int row = table.rowAtPoint(point);
            fila=datosventas.getSelectedRow();
            if (Mouse_evt.getClickCount() == 1) {
                IDVENTA.setText(datosventas.getValueAt(fila, 0).toString());
                fecha= datosventas.getValueAt(fila, 1).toString();
                total= datosventas.getValueAt(fila, 2).toString();
                personal= datosventas.getValueAt(fila, 3).toString();
                cliente= datosventas.getValueAt(fila, 4).toString();
            }
        }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IDVENTA = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        datosventas = new javax.swing.JTable();
        Mostrar = new javax.swing.JButton();
        Eliminar = new javax.swing.JButton();
        Regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        datosventas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(datosventas);

        Mostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/bar-chart.png"))); // NOI18N
        Mostrar.setText("Mostrar Detalle");
        Mostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MostrarActionPerformed(evt);
            }
        });

        Eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/delete-item.png"))); // NOI18N
        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        Regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/atraz.PNG"))); // NOI18N
        Regresar.setText("Regresar");
        Regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IDVENTA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Mostrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Eliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Regresar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IDVENTA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mostrar)
                    .addComponent(Eliminar)
                    .addComponent(Regresar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MostrarActionPerformed
        DetalleVenta abrir=new DetalleVenta();
        abrir.setVisible(true);
    }//GEN-LAST:event_MostrarActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
                       
    try{
conn=Conexion.Enlace(conn);   
conn.setAutoCommit(false);
conn.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE);
conn.commit();

        String idcompra="";    
        Object [] opciones ={"SI","NO"};
        String idventa="", idjorn="";
        int eleccion = JOptionPane.showOptionDialog(rootPane,"¿Está seguro de Eliminar la Venta No. "+IDVENTA.getText()+"?", "Mensaje de Confirmacion",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == JOptionPane.YES_OPTION){
        try{
                   
            conn=Conexion.Enlace(conn);

            try{
            conn=Conexion.Enlace(conn);
            String MAX="SELECT ID_VENTA FROM VENTA@DBLINKCHAVA WHERE FECHA='" + fecha + "' AND TOTAL='"+ total + "' AND ID_PERSONAL='"+personal+"' AND ID_CLIENTE='" + cliente + "'";
            Statement st=conn.createStatement();
                    ResultSet rs=st.executeQuery(MAX);
                    if(rs.next()){
                       
                        idventa1=rs.getString("ID_VENTA");
                    
                          PreparedStatement op=conn.prepareStatement("UPDATE VENTA@DBLINKCHAVA SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
                          op=conn.prepareStatement("UPDATE VENTA@DBLINKBETO SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
                          op=conn.prepareStatement("UPDATE VENTA@DBLINKHUGO SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();

                          op=conn.prepareStatement("UPDATE DETALLE_VENTA@DBLINKCHAVA SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
                          op=conn.prepareStatement("UPDATE DETALLE_VENTA@DBLINKBETO SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
                          op=conn.prepareStatement("UPDATE DETALLE_VENTA@DBLINKHUGO SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
            op=conn.prepareStatement("UPDATE VENTA SET ID_STATUS ='2' WHERE ID_VENTA ='"+IDVENTA.getText()+"'");
            op.executeUpdate();
            
            op=conn.prepareStatement("UPDATE DETALLE_VENTA SET ID_STATUS ='2' WHERE ID_VENTA ='"+IDVENTA.getText()+"'");
            op.executeUpdate();

                           JOptionPane.showMessageDialog(null, "Registro ELIMINADO Satisfactoriamente");
                           dispose();
                           new Ventas().setVisible(true);

                    

}else if(!rs.next()){

                       
                    try{
                     conn=Conexion.Enlace(conn);
                     MAX="SELECT ID_VENTA FROM VENTA@DBLINKRICHI WHERE FECHA='" + fecha + "' AND TOTAL='"+ total + "' AND ID_PERSONAL='"+personal+"' AND ID_CLIENTE='" + cliente + "'";
                     st=conn.createStatement();
                     rs=st.executeQuery(MAX);
                    if(rs.next()){
                       
                        idventa1=rs.getString("ID_VENTA");

                          PreparedStatement op=conn.prepareStatement("UPDATE VENTA@DBLINKRICHI SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
                          op=conn.prepareStatement("UPDATE VENTA@DBLINKMATA SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
                          op=conn.prepareStatement("UPDATE VENTA@DBLINKPROFE SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();

                          op=conn.prepareStatement("UPDATE DETALLE_VENTA@DBLINKRICHI SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
                          op=conn.prepareStatement("UPDATE DETALLE_VENTA@DBLINKMATA SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
                          op=conn.prepareStatement("UPDATE DETALLE_VENTA@DBLINKPROFE SET ID_STATUS ='2' WHERE ID_VENTA ='"+ idventa1 +"'");
                          op.executeUpdate();
                          
            op=conn.prepareStatement("UPDATE VENTA SET ID_STATUS ='2' WHERE ID_VENTA ='"+IDVENTA.getText()+"'");
            op.executeUpdate();
            
            op=conn.prepareStatement("UPDATE DETALLE_VENTA SET ID_STATUS ='2' WHERE ID_VENTA ='"+IDVENTA.getText()+"'");
            op.executeUpdate();
                           
                           JOptionPane.showMessageDialog(null, "Registro ELIMINADO Satisfactoriamente");
                           dispose();
                           new Ventas().setVisible(true);


 
                    }
                    }catch(SQLException e){}

}

    }catch(SQLException e){}
                 
    } catch (SQLException ex) {
        Logger.getLogger(Personal.class.getName()).log(Level.SEVERE, null, ex);
    }
            
    }   

                    conn.commit();
                    conn.close();
                    
} catch (SQLException ex) {
      ex.printStackTrace();
      } try {
           conn.rollback();
           System.out.println("Transaction failed. No records were written to the database.");
            }
             catch (SQLException se) {
             se.printStackTrace();
            }  
      
    }//GEN-LAST:event_EliminarActionPerformed

    private void RegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegresarActionPerformed
        Object [] opciones ={"SI","NO"};
        int eleccion = JOptionPane.showOptionDialog(rootPane,"Está a punto de salir de esta pantalla\n¿Desea continuar?","Mensaje de Confirmacion",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
        if (eleccion == JOptionPane.YES_OPTION)
        {
            dispose();
            new Principal().setVisible(true);
        }
    }//GEN-LAST:event_RegresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    public static javax.swing.JTextField IDVENTA;
    private javax.swing.JButton Mostrar;
    private javax.swing.JButton Regresar;
    private javax.swing.JTable datosventas;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
